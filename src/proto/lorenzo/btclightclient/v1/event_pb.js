// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/btclightclient/v1/event.proto (package lorenzo.btclightclient.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { BTCHeaderInfo } from "./btclightclient_pb.js";

/**
 * The header included in the event is the block in the history
 * of the current mainchain to which we are rolling back to.
 * In other words, there is one rollback event emitted per re-org, to the
 * greatest common ancestor of the old and the new fork.
 *
 * @generated from message lorenzo.btclightclient.v1.EventBTCRollBack
 */
export const EventBTCRollBack = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.EventBTCRollBack",
  () => [
    { no: 1, name: "header", kind: "message", T: BTCHeaderInfo },
  ],
);

/**
 * EventBTCRollForward is emitted on Msg/InsertHeader
 * The header included in the event is the one the main chain is extended with.
 * In the event of a reorg, each block on the new fork that comes after
 * the greatest common ancestor will have a corresponding roll forward event.
 *
 * @generated from message lorenzo.btclightclient.v1.EventBTCRollForward
 */
export const EventBTCRollForward = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.EventBTCRollForward",
  () => [
    { no: 1, name: "header", kind: "message", T: BTCHeaderInfo },
  ],
);

/**
 * EventBTCHeaderInserted is emitted on Msg/InsertHeader
 * The header included in the event is the one that was added to the
 * on chain BTC storage.
 *
 * @generated from message lorenzo.btclightclient.v1.EventBTCHeaderInserted
 */
export const EventBTCHeaderInserted = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.EventBTCHeaderInserted",
  () => [
    { no: 1, name: "header", kind: "message", T: BTCHeaderInfo },
  ],
);

/**
 * @generated from message lorenzo.btclightclient.v1.EventBTCFeeRateUpdated
 */
export const EventBTCFeeRateUpdated = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.EventBTCFeeRateUpdated",
  () => [
    { no: 1, name: "fee_rate", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

