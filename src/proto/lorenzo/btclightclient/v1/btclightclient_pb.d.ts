// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/btclightclient/v1/btclightclient.proto (package lorenzo.btclightclient.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * BTCHeaderInfo is a structure that contains all relevant information about a
 * BTC header
 *  - Full header bytes
 *  - Header hash for easy retrieval
 *  - Height of the header in the BTC chain
 *  - Total work spent on the header. This is the sum of the work corresponding
 *  to the header Bits field
 *    and the total work of the header.
 *
 * @generated from message lorenzo.btclightclient.v1.BTCHeaderInfo
 */
export declare class BTCHeaderInfo extends Message<BTCHeaderInfo> {
  /**
   * @generated from field: bytes header = 1;
   */
  header: Uint8Array;

  /**
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  /**
   * @generated from field: uint64 height = 3;
   */
  height: bigint;

  /**
   * @generated from field: bytes work = 4;
   */
  work: Uint8Array;

  constructor(data?: PartialMessage<BTCHeaderInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.BTCHeaderInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BTCHeaderInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BTCHeaderInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BTCHeaderInfo;

  static equals(a: BTCHeaderInfo | PlainMessage<BTCHeaderInfo> | undefined, b: BTCHeaderInfo | PlainMessage<BTCHeaderInfo> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btclightclient.v1.BTCFeeRate
 */
export declare class BTCFeeRate extends Message<BTCFeeRate> {
  /**
   * @generated from field: uint64 fee_rate = 1;
   */
  feeRate: bigint;

  constructor(data?: PartialMessage<BTCFeeRate>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.BTCFeeRate";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BTCFeeRate;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BTCFeeRate;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BTCFeeRate;

  static equals(a: BTCFeeRate | PlainMessage<BTCFeeRate> | undefined, b: BTCFeeRate | PlainMessage<BTCFeeRate> | undefined): boolean;
}

