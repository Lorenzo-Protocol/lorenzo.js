// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/btclightclient/v1/query.proto (package lorenzo.btclightclient.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { BTCHeaderInfo } from "./btclightclient_pb.js";

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryParamsRequest",
  [],
);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryParamsResponse",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
  ],
);

/**
 * QueryHashesRequest is request type for the Query/Hashes RPC method.
 * It involves retrieving all hashes that are maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHashesRequest
 */
export const QueryHashesRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryHashesRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryHashesResponse is response type for the Query/Hashes RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHashesResponse
 */
export const QueryHashesResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryHashesResponse",
  () => [
    { no: 1, name: "hashes", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryContainsRequest is request type for the Query/Contains RPC method.
 * It involves checking whether a hash is maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsRequest
 */
export const QueryContainsRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryContainsRequest",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * QueryContainsResponse is response type for the Query/Contains RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsResponse
 */
export const QueryContainsResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryContainsResponse",
  () => [
    { no: 1, name: "contains", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * QueryContainsRequest is request type for the temporary Query/ContainsBytes
 * RPC method. It involves checking whether a hash is maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsBytesRequest
 */
export const QueryContainsBytesRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryContainsBytesRequest",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * QueryContainsResponse is response type for the temporary Query/ContainsBytes
 * RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsBytesResponse
 */
export const QueryContainsBytesResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryContainsBytesResponse",
  () => [
    { no: 1, name: "contains", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * QueryMainChainRequest is request type for the Query/MainChain RPC method.
 * It involves retrieving the canonical chain maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryMainChainRequest
 */
export const QueryMainChainRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryMainChainRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryMainChainResponse is response type for the Query/MainChain RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryMainChainResponse
 */
export const QueryMainChainResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryMainChainResponse",
  () => [
    { no: 1, name: "headers", kind: "message", T: BTCHeaderInfo, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryTipRequest is the request type for the Query/Tip RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryTipRequest
 */
export const QueryTipRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryTipRequest",
  [],
);

/**
 * QueryTipResponse is the response type for the Query/Tip RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryTipResponse
 */
export const QueryTipResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryTipResponse",
  () => [
    { no: 1, name: "header", kind: "message", T: BTCHeaderInfo },
  ],
);

/**
 * QueryBaseHeaderRequest is the request type for the Query/BaseHeader RPC
 * method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryBaseHeaderRequest
 */
export const QueryBaseHeaderRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryBaseHeaderRequest",
  [],
);

/**
 * QueryBaseHeaderResponse is the response type for the Query/BaseHeader RPC
 * method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryBaseHeaderResponse
 */
export const QueryBaseHeaderResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryBaseHeaderResponse",
  () => [
    { no: 1, name: "header", kind: "message", T: BTCHeaderInfo },
  ],
);

/**
 * QueryMainChainDepthRequest is the request type for the Query/MainChainDepth
 * RPC it contains hex encoded hash of btc block header as parameter
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHeaderDepthRequest
 */
export const QueryHeaderDepthRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryHeaderDepthRequest",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryMainChainDepthResponse is the response type for the Query/MainChainDepth
 * RPC it contains depth of the block in main chain
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHeaderDepthResponse
 */
export const QueryHeaderDepthResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryHeaderDepthResponse",
  () => [
    { no: 1, name: "depth", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message lorenzo.btclightclient.v1.QueryFeeRateRequest
 */
export const QueryFeeRateRequest = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryFeeRateRequest",
  [],
);

/**
 * @generated from message lorenzo.btclightclient.v1.QueryFeeRateResponse
 */
export const QueryFeeRateResponse = proto3.makeMessageType(
  "lorenzo.btclightclient.v1.QueryFeeRateResponse",
  () => [
    { no: 1, name: "fee_rate", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

