// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/btclightclient/v1/query.proto (package lorenzo.btclightclient.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Params } from "./params_pb.js";
import type { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import type { BTCHeaderInfo } from "./btclightclient_pb.js";

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryParamsRequest
 */
export declare class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryParamsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean;
}

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryParamsResponse
 */
export declare class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: lorenzo.btclightclient.v1.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean;
}

/**
 * QueryHashesRequest is request type for the Query/Hashes RPC method.
 * It involves retrieving all hashes that are maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHashesRequest
 */
export declare class QueryHashesRequest extends Message<QueryHashesRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryHashesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryHashesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryHashesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryHashesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryHashesRequest;

  static equals(a: QueryHashesRequest | PlainMessage<QueryHashesRequest> | undefined, b: QueryHashesRequest | PlainMessage<QueryHashesRequest> | undefined): boolean;
}

/**
 * QueryHashesResponse is response type for the Query/Hashes RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHashesResponse
 */
export declare class QueryHashesResponse extends Message<QueryHashesResponse> {
  /**
   * @generated from field: repeated bytes hashes = 1;
   */
  hashes: Uint8Array[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryHashesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryHashesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryHashesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryHashesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryHashesResponse;

  static equals(a: QueryHashesResponse | PlainMessage<QueryHashesResponse> | undefined, b: QueryHashesResponse | PlainMessage<QueryHashesResponse> | undefined): boolean;
}

/**
 * QueryContainsRequest is request type for the Query/Contains RPC method.
 * It involves checking whether a hash is maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsRequest
 */
export declare class QueryContainsRequest extends Message<QueryContainsRequest> {
  /**
   * @generated from field: bytes hash = 1;
   */
  hash: Uint8Array;

  constructor(data?: PartialMessage<QueryContainsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryContainsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryContainsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryContainsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryContainsRequest;

  static equals(a: QueryContainsRequest | PlainMessage<QueryContainsRequest> | undefined, b: QueryContainsRequest | PlainMessage<QueryContainsRequest> | undefined): boolean;
}

/**
 * QueryContainsResponse is response type for the Query/Contains RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsResponse
 */
export declare class QueryContainsResponse extends Message<QueryContainsResponse> {
  /**
   * @generated from field: bool contains = 1;
   */
  contains: boolean;

  constructor(data?: PartialMessage<QueryContainsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryContainsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryContainsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryContainsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryContainsResponse;

  static equals(a: QueryContainsResponse | PlainMessage<QueryContainsResponse> | undefined, b: QueryContainsResponse | PlainMessage<QueryContainsResponse> | undefined): boolean;
}

/**
 * QueryContainsRequest is request type for the temporary Query/ContainsBytes
 * RPC method. It involves checking whether a hash is maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsBytesRequest
 */
export declare class QueryContainsBytesRequest extends Message<QueryContainsBytesRequest> {
  /**
   * @generated from field: bytes hash = 1;
   */
  hash: Uint8Array;

  constructor(data?: PartialMessage<QueryContainsBytesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryContainsBytesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryContainsBytesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryContainsBytesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryContainsBytesRequest;

  static equals(a: QueryContainsBytesRequest | PlainMessage<QueryContainsBytesRequest> | undefined, b: QueryContainsBytesRequest | PlainMessage<QueryContainsBytesRequest> | undefined): boolean;
}

/**
 * QueryContainsResponse is response type for the temporary Query/ContainsBytes
 * RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryContainsBytesResponse
 */
export declare class QueryContainsBytesResponse extends Message<QueryContainsBytesResponse> {
  /**
   * @generated from field: bool contains = 1;
   */
  contains: boolean;

  constructor(data?: PartialMessage<QueryContainsBytesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryContainsBytesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryContainsBytesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryContainsBytesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryContainsBytesResponse;

  static equals(a: QueryContainsBytesResponse | PlainMessage<QueryContainsBytesResponse> | undefined, b: QueryContainsBytesResponse | PlainMessage<QueryContainsBytesResponse> | undefined): boolean;
}

/**
 * QueryMainChainRequest is request type for the Query/MainChain RPC method.
 * It involves retrieving the canonical chain maintained by the module.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryMainChainRequest
 */
export declare class QueryMainChainRequest extends Message<QueryMainChainRequest> {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;

  constructor(data?: PartialMessage<QueryMainChainRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryMainChainRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMainChainRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMainChainRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMainChainRequest;

  static equals(a: QueryMainChainRequest | PlainMessage<QueryMainChainRequest> | undefined, b: QueryMainChainRequest | PlainMessage<QueryMainChainRequest> | undefined): boolean;
}

/**
 * QueryMainChainResponse is response type for the Query/MainChain RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryMainChainResponse
 */
export declare class QueryMainChainResponse extends Message<QueryMainChainResponse> {
  /**
   * @generated from field: repeated lorenzo.btclightclient.v1.BTCHeaderInfo headers = 1;
   */
  headers: BTCHeaderInfo[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;

  constructor(data?: PartialMessage<QueryMainChainResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryMainChainResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryMainChainResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryMainChainResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryMainChainResponse;

  static equals(a: QueryMainChainResponse | PlainMessage<QueryMainChainResponse> | undefined, b: QueryMainChainResponse | PlainMessage<QueryMainChainResponse> | undefined): boolean;
}

/**
 * QueryTipRequest is the request type for the Query/Tip RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryTipRequest
 */
export declare class QueryTipRequest extends Message<QueryTipRequest> {
  constructor(data?: PartialMessage<QueryTipRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryTipRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTipRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTipRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTipRequest;

  static equals(a: QueryTipRequest | PlainMessage<QueryTipRequest> | undefined, b: QueryTipRequest | PlainMessage<QueryTipRequest> | undefined): boolean;
}

/**
 * QueryTipResponse is the response type for the Query/Tip RPC method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryTipResponse
 */
export declare class QueryTipResponse extends Message<QueryTipResponse> {
  /**
   * @generated from field: lorenzo.btclightclient.v1.BTCHeaderInfo header = 1;
   */
  header?: BTCHeaderInfo;

  constructor(data?: PartialMessage<QueryTipResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryTipResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryTipResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryTipResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryTipResponse;

  static equals(a: QueryTipResponse | PlainMessage<QueryTipResponse> | undefined, b: QueryTipResponse | PlainMessage<QueryTipResponse> | undefined): boolean;
}

/**
 * QueryBaseHeaderRequest is the request type for the Query/BaseHeader RPC
 * method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryBaseHeaderRequest
 */
export declare class QueryBaseHeaderRequest extends Message<QueryBaseHeaderRequest> {
  constructor(data?: PartialMessage<QueryBaseHeaderRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryBaseHeaderRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBaseHeaderRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBaseHeaderRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBaseHeaderRequest;

  static equals(a: QueryBaseHeaderRequest | PlainMessage<QueryBaseHeaderRequest> | undefined, b: QueryBaseHeaderRequest | PlainMessage<QueryBaseHeaderRequest> | undefined): boolean;
}

/**
 * QueryBaseHeaderResponse is the response type for the Query/BaseHeader RPC
 * method.
 *
 * @generated from message lorenzo.btclightclient.v1.QueryBaseHeaderResponse
 */
export declare class QueryBaseHeaderResponse extends Message<QueryBaseHeaderResponse> {
  /**
   * @generated from field: lorenzo.btclightclient.v1.BTCHeaderInfo header = 1;
   */
  header?: BTCHeaderInfo;

  constructor(data?: PartialMessage<QueryBaseHeaderResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryBaseHeaderResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBaseHeaderResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBaseHeaderResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBaseHeaderResponse;

  static equals(a: QueryBaseHeaderResponse | PlainMessage<QueryBaseHeaderResponse> | undefined, b: QueryBaseHeaderResponse | PlainMessage<QueryBaseHeaderResponse> | undefined): boolean;
}

/**
 * QueryMainChainDepthRequest is the request type for the Query/MainChainDepth
 * RPC it contains hex encoded hash of btc block header as parameter
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHeaderDepthRequest
 */
export declare class QueryHeaderDepthRequest extends Message<QueryHeaderDepthRequest> {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  constructor(data?: PartialMessage<QueryHeaderDepthRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryHeaderDepthRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryHeaderDepthRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryHeaderDepthRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryHeaderDepthRequest;

  static equals(a: QueryHeaderDepthRequest | PlainMessage<QueryHeaderDepthRequest> | undefined, b: QueryHeaderDepthRequest | PlainMessage<QueryHeaderDepthRequest> | undefined): boolean;
}

/**
 * QueryMainChainDepthResponse is the response type for the Query/MainChainDepth
 * RPC it contains depth of the block in main chain
 *
 * @generated from message lorenzo.btclightclient.v1.QueryHeaderDepthResponse
 */
export declare class QueryHeaderDepthResponse extends Message<QueryHeaderDepthResponse> {
  /**
   * @generated from field: uint64 depth = 1;
   */
  depth: bigint;

  constructor(data?: PartialMessage<QueryHeaderDepthResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryHeaderDepthResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryHeaderDepthResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryHeaderDepthResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryHeaderDepthResponse;

  static equals(a: QueryHeaderDepthResponse | PlainMessage<QueryHeaderDepthResponse> | undefined, b: QueryHeaderDepthResponse | PlainMessage<QueryHeaderDepthResponse> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btclightclient.v1.QueryFeeRateRequest
 */
export declare class QueryFeeRateRequest extends Message<QueryFeeRateRequest> {
  constructor(data?: PartialMessage<QueryFeeRateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryFeeRateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryFeeRateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryFeeRateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryFeeRateRequest;

  static equals(a: QueryFeeRateRequest | PlainMessage<QueryFeeRateRequest> | undefined, b: QueryFeeRateRequest | PlainMessage<QueryFeeRateRequest> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btclightclient.v1.QueryFeeRateResponse
 */
export declare class QueryFeeRateResponse extends Message<QueryFeeRateResponse> {
  /**
   * @generated from field: uint64 fee_rate = 1;
   */
  feeRate: bigint;

  constructor(data?: PartialMessage<QueryFeeRateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btclightclient.v1.QueryFeeRateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryFeeRateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryFeeRateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryFeeRateResponse;

  static equals(a: QueryFeeRateResponse | PlainMessage<QueryFeeRateResponse> | undefined, b: QueryFeeRateResponse | PlainMessage<QueryFeeRateResponse> | undefined): boolean;
}

