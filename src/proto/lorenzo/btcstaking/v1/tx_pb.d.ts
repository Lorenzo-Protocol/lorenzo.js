// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/btcstaking/v1/tx.proto (package lorenzo.btcstaking.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Params, Receiver } from "./params_pb.js";

/**
 * @generated from message lorenzo.btcstaking.v1.TransactionKey
 */
export declare class TransactionKey extends Message<TransactionKey> {
  /**
   * @generated from field: uint32 index = 1;
   */
  index: number;

  /**
   * @generated from field: bytes hash = 2;
   */
  hash: Uint8Array;

  constructor(data?: PartialMessage<TransactionKey>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.TransactionKey";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransactionKey;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransactionKey;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransactionKey;

  static equals(a: TransactionKey | PlainMessage<TransactionKey> | undefined, b: TransactionKey | PlainMessage<TransactionKey> | undefined): boolean;
}

/**
 * TransactionInfo is the info of a tx on Bitcoin,
 * including
 * - the position of the tx on BTC blockchain
 * - the full tx content
 * - the Merkle proof that this tx is on the above position
 *
 * @generated from message lorenzo.btcstaking.v1.TransactionInfo
 */
export declare class TransactionInfo extends Message<TransactionInfo> {
  /**
   * key is the position (txIdx, blockHash) of this tx on BTC blockchain
   * Although it is already a part of SubmissionKey, we store it here again
   * to make TransactionInfo self-contained.
   * For example, storing the key allows TransactionInfo to not relay on
   * the fact that TransactionInfo will be ordered in the same order as
   * TransactionKeys in SubmissionKey.
   *
   * @generated from field: lorenzo.btcstaking.v1.TransactionKey key = 1;
   */
  key?: TransactionKey;

  /**
   * transaction is the full transaction in bytes
   *
   * @generated from field: bytes transaction = 2;
   */
  transaction: Uint8Array;

  /**
   * @generated from field: bytes proof = 3;
   */
  proof: Uint8Array;

  constructor(data?: PartialMessage<TransactionInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.TransactionInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransactionInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransactionInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransactionInfo;

  static equals(a: TransactionInfo | PlainMessage<TransactionInfo> | undefined, b: TransactionInfo | PlainMessage<TransactionInfo> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgCreateBTCStaking
 */
export declare class MsgCreateBTCStaking extends Message<MsgCreateBTCStaking> {
  /**
   * @generated from field: string signer = 1;
   */
  signer: string;

  /**
   * @generated from field: lorenzo.btcstaking.v1.TransactionInfo staking_tx = 2;
   */
  stakingTx?: TransactionInfo;

  /**
   * deprecated
   *
   * @generated from field: string receiver = 3;
   */
  receiver: string;

  /**
   * @generated from field: uint64 agent_id = 4;
   */
  agentId: bigint;

  constructor(data?: PartialMessage<MsgCreateBTCStaking>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgCreateBTCStaking";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateBTCStaking;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateBTCStaking;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateBTCStaking;

  static equals(a: MsgCreateBTCStaking | PlainMessage<MsgCreateBTCStaking> | undefined, b: MsgCreateBTCStaking | PlainMessage<MsgCreateBTCStaking> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgCreateBTCStakingResponse
 */
export declare class MsgCreateBTCStakingResponse extends Message<MsgCreateBTCStakingResponse> {
  constructor(data?: PartialMessage<MsgCreateBTCStakingResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgCreateBTCStakingResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateBTCStakingResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateBTCStakingResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateBTCStakingResponse;

  static equals(a: MsgCreateBTCStakingResponse | PlainMessage<MsgCreateBTCStakingResponse> | undefined, b: MsgCreateBTCStakingResponse | PlainMessage<MsgCreateBTCStakingResponse> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgBurnRequest
 */
export declare class MsgBurnRequest extends Message<MsgBurnRequest> {
  /**
   * @generated from field: string signer = 1;
   */
  signer: string;

  /**
   * @generated from field: string btc_target_address = 2;
   */
  btcTargetAddress: string;

  /**
   * @generated from field: string amount = 3;
   */
  amount: string;

  constructor(data?: PartialMessage<MsgBurnRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgBurnRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBurnRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBurnRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBurnRequest;

  static equals(a: MsgBurnRequest | PlainMessage<MsgBurnRequest> | undefined, b: MsgBurnRequest | PlainMessage<MsgBurnRequest> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgBurnResponse
 */
export declare class MsgBurnResponse extends Message<MsgBurnResponse> {
  constructor(data?: PartialMessage<MsgBurnResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgBurnResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgBurnResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgBurnResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgBurnResponse;

  static equals(a: MsgBurnResponse | PlainMessage<MsgBurnResponse> | undefined, b: MsgBurnResponse | PlainMessage<MsgBurnResponse> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgAddReceiver
 */
export declare class MsgAddReceiver extends Message<MsgAddReceiver> {
  /**
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * @generated from field: lorenzo.btcstaking.v1.Receiver receiver = 2;
   */
  receiver?: Receiver;

  constructor(data?: PartialMessage<MsgAddReceiver>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgAddReceiver";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddReceiver;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddReceiver;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddReceiver;

  static equals(a: MsgAddReceiver | PlainMessage<MsgAddReceiver> | undefined, b: MsgAddReceiver | PlainMessage<MsgAddReceiver> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgAddReceiverResponse
 */
export declare class MsgAddReceiverResponse extends Message<MsgAddReceiverResponse> {
  constructor(data?: PartialMessage<MsgAddReceiverResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgAddReceiverResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddReceiverResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddReceiverResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddReceiverResponse;

  static equals(a: MsgAddReceiverResponse | PlainMessage<MsgAddReceiverResponse> | undefined, b: MsgAddReceiverResponse | PlainMessage<MsgAddReceiverResponse> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgRemoveReceiver
 */
export declare class MsgRemoveReceiver extends Message<MsgRemoveReceiver> {
  /**
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * @generated from field: string receiver = 2;
   */
  receiver: string;

  constructor(data?: PartialMessage<MsgRemoveReceiver>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgRemoveReceiver";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveReceiver;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveReceiver;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveReceiver;

  static equals(a: MsgRemoveReceiver | PlainMessage<MsgRemoveReceiver> | undefined, b: MsgRemoveReceiver | PlainMessage<MsgRemoveReceiver> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgRemoveReceiverResponse
 */
export declare class MsgRemoveReceiverResponse extends Message<MsgRemoveReceiverResponse> {
  constructor(data?: PartialMessage<MsgRemoveReceiverResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgRemoveReceiverResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgRemoveReceiverResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgRemoveReceiverResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgRemoveReceiverResponse;

  static equals(a: MsgRemoveReceiverResponse | PlainMessage<MsgRemoveReceiverResponse> | undefined, b: MsgRemoveReceiverResponse | PlainMessage<MsgRemoveReceiverResponse> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgUpdateParams
 */
export declare class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * @generated from field: lorenzo.btcstaking.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgUpdateParams";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams;

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean;
}

/**
 * @generated from message lorenzo.btcstaking.v1.MsgUpdateParamsResponse
 */
export declare class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse;

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean;
}

