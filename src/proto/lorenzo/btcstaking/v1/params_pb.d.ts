// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/btcstaking/v1/params.proto (package lorenzo.btcstaking.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message lorenzo.btcstaking.v1.Receiver
 */
export declare class Receiver extends Message<Receiver> {
  /**
   * name of the receiver
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * btc address
   *
   * @generated from field: string addr = 2;
   */
  addr: string;

  /**
   * like 0xBAb28FF7659481F1c8516f616A576339936AFB06
   *
   * @generated from field: string eth_addr = 3;
   */
  ethAddr: string;

  constructor(data?: PartialMessage<Receiver>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.Receiver";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Receiver;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Receiver;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Receiver;

  static equals(a: Receiver | PlainMessage<Receiver> | undefined, b: Receiver | PlainMessage<Receiver> | undefined): boolean;
}

/**
 * GenesisState defines the btcstaking module's genesis state.
 *
 * @generated from message lorenzo.btcstaking.v1.Params
 */
export declare class Params extends Message<Params> {
  /**
   * receivers' name must be unique
   *
   * @generated from field: repeated lorenzo.btcstaking.v1.Receiver receivers = 1;
   */
  receivers: Receiver[];

  /**
   * deprecated
   *
   * @generated from field: uint32 btc_confirmations_depth = 2;
   */
  btcConfirmationsDepth: number;

  /**
   * allow list to mint for receiver with eth_addr
   *
   * @generated from field: repeated string minter_allow_list = 3;
   */
  minterAllowList: string[];

  /**
   * cross chain bridge contract address
   *
   * @generated from field: string bridge_addr = 4;
   */
  bridgeAddr: string;

  /**
   * minimum satoshi per txout
   *
   * @generated from field: int64 txout_dust_amount = 5;
   */
  txoutDustAmount: bigint;

  constructor(data?: PartialMessage<Params>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.btcstaking.v1.Params";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params;

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean;
}

