// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/token/v1/genesis.proto (package lorenzo.token.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { TokenPair } from "./token_pb.js";

/**
 * GenesisState defines the token module's genesis state.
 *
 * @generated from message lorenzo.token.v1.GenesisState
 */
export declare class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: lorenzo.token.v1.Params params = 1;
   */
  params?: Params;

  /**
   * @generated from field: repeated lorenzo.token.v1.TokenPair token_pairs = 2;
   */
  tokenPairs: TokenPair[];

  constructor(data?: PartialMessage<GenesisState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.token.v1.GenesisState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenesisState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenesisState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenesisState;

  static equals(a: GenesisState | PlainMessage<GenesisState> | undefined, b: GenesisState | PlainMessage<GenesisState> | undefined): boolean;
}

/**
 * Params defines the token module parameters.
 *
 * @generated from message lorenzo.token.v1.Params
 */
export declare class Params extends Message<Params> {
  /**
   * @generated from field: bool enable_conversion = 1;
   */
  enableConversion: boolean;

  /**
   * @generated from field: bool enable_evm_hook = 2;
   */
  enableEvmHook: boolean;

  constructor(data?: PartialMessage<Params>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "lorenzo.token.v1.Params";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params;

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean;
}

