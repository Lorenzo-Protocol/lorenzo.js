// @generated by protoc-gen-es v1.0.0
// @generated from file lorenzo/token/v1/query.proto (package lorenzo.token.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb.js";
import { TokenPair } from "./token_pb.js";
import { Params } from "./genesis_pb.js";
import { Coin } from "../../../cosmos/base/v1beta1/coin_pb.js";

/**
 * QueryTokenPairsRequest is the request type for the Query/TokenPairs RPC
 *
 * @generated from message lorenzo.token.v1.QueryTokenPairsRequest
 */
export const QueryTokenPairsRequest = proto3.makeMessageType(
  "lorenzo.token.v1.QueryTokenPairsRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryTokenPairsResponse is the response type for the Query/TokenPairs RPC
 *
 * @generated from message lorenzo.token.v1.QueryTokenPairsResponse
 */
export const QueryTokenPairsResponse = proto3.makeMessageType(
  "lorenzo.token.v1.QueryTokenPairsResponse",
  () => [
    { no: 1, name: "token_pairs", kind: "message", T: TokenPair, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryTokenPairRequest is the request type for the Query/TokenPair RPC method.
 *
 * @generated from message lorenzo.token.v1.QueryTokenPairRequest
 */
export const QueryTokenPairRequest = proto3.makeMessageType(
  "lorenzo.token.v1.QueryTokenPairRequest",
  () => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryTokenPairResponse is the response type for the Query/TokenPair RPC
 *
 * @generated from message lorenzo.token.v1.QueryTokenPairResponse
 */
export const QueryTokenPairResponse = proto3.makeMessageType(
  "lorenzo.token.v1.QueryTokenPairResponse",
  () => [
    { no: 1, name: "token_pair", kind: "message", T: TokenPair },
  ],
);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message lorenzo.token.v1.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "lorenzo.token.v1.QueryParamsRequest",
  [],
);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC
 *
 * @generated from message lorenzo.token.v1.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "lorenzo.token.v1.QueryParamsResponse",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
  ],
);

/**
 * QueryBalancesRequest is the request type for the Query/Balances RPC
 *
 * @generated from message lorenzo.token.v1.QueryBalanceRequest
 */
export const QueryBalanceRequest = proto3.makeMessageType(
  "lorenzo.token.v1.QueryBalanceRequest",
  () => [
    { no: 1, name: "account_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryBalancesResponse is the response type for the Query/Balances RPC
 *
 * @generated from message lorenzo.token.v1.QueryBalanceResponse
 */
export const QueryBalanceResponse = proto3.makeMessageType(
  "lorenzo.token.v1.QueryBalanceResponse",
  () => [
    { no: 1, name: "coin", kind: "message", T: Coin },
    { no: 2, name: "erc20_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "erc20_token_amount", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

